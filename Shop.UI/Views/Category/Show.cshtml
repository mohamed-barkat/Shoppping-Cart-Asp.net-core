@using Shop.UI.ViewModel.Categories
@model CategoryViewModel

@{
    ViewData["Title"] = " Category Details";
}
<h3 class="justify-content-center d-flex mytitle" style="margin:10px">Details </h3>

<div>
    <h4>Category</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CraetedAt)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CraetedAt)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ProductCount)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ProductCount)
        </dd>
        <dt class="col-sm-2 m-2">
            @Html.DisplayNameFor(model => model.IsUpdated)
        </dt>
        <dd class="col-sm-10">
            @if(Model.IsUpdated)
            {
            <span>True</span>
            }
            else
            {
                <span>False</span>
            }
         
        </dd>
        @if(Model.IsUpdated)
        {
             <dt class="col-sm-2 m-2">
            @Html.DisplayNameFor(model => model.UpdatedAt)
        </dt>
        <dd class="col-sm-10">
           @Html.DisplayFor(model => model.UpdatedAt)
        </dd>
        }
       
    </dl>
</div>
<div>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    <a asp-action="Index">Back to List</a>
</div>
